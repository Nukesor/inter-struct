#[cfg(test)]
mod tests {
    use crate::into_test::*;

    /// Test the implementation of [std::convert::Into] generated by inter-struct.
    #[test]
    fn test_into() {
        // The base struct that's going to be merged into.
        let from = FromStruct::new();

        let into = IntoStruct::from(from);
        assert_eq!(into.normal, "from");
        assert_eq!(into.optional, Some("from".to_string()));
    }

    /// Test the implementation of [std::convert::Into] generated by inter-struct.
    /// This ensures that non-optional values are converted into `Some()` optional values as
    /// expected.
    #[test]
    fn test_into_non_optional() {
        // The base struct that's going to be merged into.
        let from = FromStructNonOptional::new();

        let into = IntoStruct::from(from);
        assert_eq!(into.normal, "from_non_optional");
        assert_eq!(into.optional, Some("from_non_optional".to_string()));
    }
}
